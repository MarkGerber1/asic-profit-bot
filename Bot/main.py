import asyncio
import logging
from aiogram import Bot, Dispatcher, F
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from config import BOT_TOKEN
from ranking import init_db, get_top, refresh_miners, get_miner_by_model
from user_db import init_user_db, get_user_settings, update_user_tariff, update_user_currency, add_favorite_miner, remove_favorite_miner, get_user_favorites
from currency import format_currency
from scheduler import start_scheduler
from messages import build_ranking_message, build_deep_dive, build_compare_message, build_help_message, build_market_message, build_settings_message

logging.basicConfig(level=logging.INFO)

# States –¥–ª—è FSM
class UserStates(StatesGroup):
    waiting_for_tariff = State()
    waiting_for_compare_model1 = State()
    waiting_for_compare_model2 = State()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
default_props = DefaultBotProperties(parse_mode=ParseMode.HTML)
bot = Bot(BOT_TOKEN, default=default_props)
dp = Dispatcher()

# –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ - –ü–û–°–¢–û–Ø–ù–ù–´–ï –ö–ù–û–ü–ö–ò –í–ù–ò–ó–£ –≠–ö–†–ê–ù–ê
MAIN_MENU = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text="ü™ô –¢–û–ü-–º–∞–π–Ω–µ—Ä—ã"),
            KeyboardButton(text="üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞"),
            KeyboardButton(text="üí∏ –ü—Ä–æ—Ñ–∏—Ç –≤ —Ä—É–±–ª—è—Ö")
        ],
        [
            KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
            KeyboardButton(text="üõ†Ô∏è –ì–∞–π–¥ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ")
        ],
        [
            KeyboardButton(text="‚ÑπÔ∏è –û –±–æ—Ç–µ"),
            KeyboardButton(text="ü§ù –ü–∞—Ä—Ç–Ω—ë—Ä–∫–∞"),
            KeyboardButton(text="‚ùì FAQ")
        ]
    ],
    resize_keyboard=True,
    is_persistent=True,
    one_time_keyboard=False,
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é..."
)

@dp.message(CommandStart())
async def cmd_start(message: Message):
    """–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é"""
    await message.answer(
        "üöÄ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ASIC Profit Bot!</b>\n\n"
        "üíé –Ø –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ —Å–∞–º—ã–µ –ø—Ä–∏–±—ã–ª—å–Ω—ã–µ ASIC –º–∞–π–Ω–µ—Ä—ã —Å —É—á–µ—Ç–æ–º "
        "–≤–∞—à–µ–≥–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ –Ω–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ.\n\n"
        "üéØ <b>–ß—Ç–æ —è —É–º–µ—é:</b>\n"
        "‚Ä¢ üèÜ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—É—é –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç—å –º–∞–π–Ω–µ—Ä–æ–≤\n"
        "‚Ä¢ üí± –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–Ω—ã –≤ —Ä—É–±–ª–∏ –∏ –¥—Ä—É–≥–∏–µ –≤–∞–ª—é—Ç—ã\n"
        "‚Ä¢ ‚öôÔ∏è –£—á–∏—Ç—ã–≤–∞—Ç—å –≤–∞—à–∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è\n"
        "‚Ä¢ üìä –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É\n"
        "‚Ä¢ ‚≠ê –°–æ—Ö—Ä–∞–Ω—è—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏\n\n"
        "üî• <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ!</b>",
        reply_markup=MAIN_MENU
    )

@dp.message(Command("help"))
async def cmd_help(message: Message):
    """–°–ø—Ä–∞–≤–∫–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ–º–∞–Ω–¥"""
    help_text = build_help_message()
    await message.answer(help_text, reply_markup=MAIN_MENU)

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é ---

@dp.message(F.text == "ü™ô –¢–û–ü-–º–∞–π–Ω–µ—Ä—ã")
async def menu_top_miners(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –¢–û–ü-–º–∞–π–Ω–µ—Ä—ã"""
    print(f"‚úÖ –•–ï–ù–î–õ–ï–†: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∫–Ω–æ–ø–∫–∞ '–¢–û–ü-–º–∞–π–Ω–µ—Ä—ã' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    try:
        user_settings = await get_user_settings(message.from_user.id)
        tariff = user_settings['electricity_tariff']
        currency = user_settings['currency']
        
        miners = await get_top(10, tariff, currency)
        if not miners:
            await message.answer(
                "‚ùå <b>–î–∞–Ω–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</b>\n\n"
                "‚è≥ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ –∏–¥—ë—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.\n\n"
                "üîÑ <i>–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤</i>",
                reply_markup=MAIN_MENU
            )
            return
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑ messages.py
        response_text = build_ranking_message(miners, tariff, currency)
        await message.answer(response_text, reply_markup=MAIN_MENU)
        
    except Exception as e:
        print(f"Error in menu_top_miners: {e}")
        await message.answer(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö</b>\n\n"
            "üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n\n"
            "üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
            "‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n"
            "‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö\n"
            "‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ",
            reply_markup=MAIN_MENU
        )

@dp.message(F.text == "üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞")  
async def menu_analytics(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞"""
    print(f"‚úÖ –•–ï–ù–î–õ–ï–†: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∫–Ω–æ–ø–∫–∞ '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    try:
        user_settings = await get_user_settings(message.from_user.id)
        miners = await get_top(100, user_settings['electricity_tariff'], user_settings['currency'])
        
        if not miners:
            await message.answer(
                "‚ùå <b>–î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</b>\n\n"
                "‚è≥ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É",
                reply_markup=MAIN_MENU
            )
            return
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ messages.py –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        analytics_text = build_market_message(miners, user_settings['currency'])
        await message.answer(analytics_text, reply_markup=MAIN_MENU)
        
    except Exception as e:
        print(f"Error in menu_analytics: {e}")
        await message.answer(
            "üìä <b>–ê–ù–ê–õ–ò–¢–ò–ö–ê –†–´–ù–ö–ê ASIC</b>\n\n"
            "‚ùå –î–∞–Ω–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã\n"
            "üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ",
            reply_markup=MAIN_MENU
        )

@dp.message(F.text == "üí∏ –ü—Ä–æ—Ñ–∏—Ç –≤ —Ä—É–±–ª—è—Ö")
async def menu_profit_rub(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ü—Ä–æ—Ñ–∏—Ç –≤ —Ä—É–±–ª—è—Ö"""
    print(f"‚úÖ –•–ï–ù–î–õ–ï–†: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∫–Ω–æ–ø–∫–∞ '–ü—Ä–æ—Ñ–∏—Ç –≤ —Ä—É–±–ª—è—Ö' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    try:
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä—É–±–ª–∏
        user_id = message.from_user.id
        await update_user_currency(user_id, 'RUB')
        
        user_settings = await get_user_settings(user_id)
        tariff = user_settings['electricity_tariff']
        
        miners = await get_top(10, tariff, 'RUB')
        if not miners:
            await message.answer(
                "‚ùå <b>–î–∞–Ω–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</b>\n\n"
                "‚è≥ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ –∏–¥—ë—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.",
                reply_markup=MAIN_MENU
            )
            return
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤ —Ä—É–±–ª—è—Ö
        response_text = build_ranking_message(miners, tariff, 'RUB')
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ä—É–±–ª–µ–π
        rub_text = f"üá∑üá∫ <b>–ü–†–û–§–ò–¢ –í –†–£–ë–õ–Ø–•</b>\n\n{response_text}"
        
        await message.answer(rub_text, reply_markup=MAIN_MENU)
        
    except Exception as e:
        print(f"Error in menu_profit_rub: {e}")
        await message.answer(
            "üá∑üá∫ <b>–ü–†–û–§–ò–¢ –í –†–£–ë–õ–Ø–•</b>\n\n"
            "‚ùå –î–∞–Ω–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã\n"
            "üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ",
            reply_markup=MAIN_MENU
        )

@dp.message(F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def menu_settings(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ù–∞—Å—Ç—Ä–æ–π–∫–∏"""
    try:
        user_settings = await get_user_settings(message.from_user.id)
        settings_text = build_settings_message(user_settings)
        
        # –î–æ–±–∞–≤–ª—è–µ–º inline –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
        settings_kb = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="‚ö° –ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ", callback_data="change_tariff"),
                InlineKeyboardButton(text="üí± –°–º–µ–Ω–∏—Ç—å –≤–∞–ª—é—Ç—É", callback_data="change_currency")
            ],
            [
                InlineKeyboardButton(text="‚ù§Ô∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ", callback_data="show_favorites"),
                InlineKeyboardButton(text="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ", callback_data="clear_favorites")
            ]
        ])
        
        await message.answer(settings_text, reply_markup=settings_kb)
        
    except Exception as e:
        print(f"Error in menu_settings: {e}")
        await message.answer(
            "‚öôÔ∏è <b>–ù–ê–°–¢–†–û–ô–ö–ò –ë–û–¢–ê</b>\n\n"
            "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫\n"
            "üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ",
            reply_markup=MAIN_MENU
        )

@dp.message(F.text == "üõ†Ô∏è –ì–∞–π–¥ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ")
async def menu_guide(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ì–∞–π–¥ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ"""
    guide_text = """
üõ†Ô∏è <b>–ü–û–õ–ù–´–ô –ì–ê–ô–î –ü–û –£–°–¢–ê–ù–û–í–ö–ï ASIC-–ú–ê–ô–ù–ï–†–ê</b>

üéØ <b>–®–ê–ì 1: –í–´–ë–û–† –ú–ê–ô–ù–ï–†–ê</b>
‚Ä¢ üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É ü™ô –¢–û–ü-–º–∞–π–Ω–µ—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–∏–±—ã–ª—å–Ω–æ–π –º–æ–¥–µ–ª–∏
‚Ä¢ üìä –£—á–∏—Ç—ã–≤–∞–π—Ç–µ –≤–∞—à t–∞—Ä–∏—Ñ—É –Ω–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ
‚Ä¢ üå°Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—é
‚Ä¢ üí∞ –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –ø–µ—Ä–∏–æ–¥ –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏

üè† <b>–®–ê–ì 2: –ü–û–î–ì–û–¢–û–í–ö–ê –ü–û–ú–ï–©–ï–ù–ò–Ø</b>
‚Ä¢ üå™Ô∏è –ü—Ä–∏—Ç–æ—á–Ω–æ-–≤—ã—Ç—è–∂–Ω–∞—è –≤–µ–Ω—Ç–∏–ª—è—Ü–∏—è (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!)
‚Ä¢ üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ –Ω–µ –≤—ã—à–µ 30¬∞C
‚Ä¢ üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å –Ω–µ –±–æ–ª–µ–µ 65%
‚Ä¢ üîá –û—Ç–¥–µ–ª—å–Ω–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ (—à—É–º 70-80 –¥–ë)
‚Ä¢ üö® –ü–æ–∂–∞—Ä–Ω–∞—è —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—è

‚ö° <b>–®–ê–ì 3: –≠–õ–ï–ö–¢–†–ò–ö–ê</b>
‚Ä¢ üîå –û—Ç–¥–µ–ª—å–Ω–∞—è –ª–∏–Ω–∏—è —Å –∞–≤—Ç–æ–º–∞—Ç–æ–º
‚Ä¢ üõ°Ô∏è –£–ó–û (—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∑–∞—â–∏—Ç–Ω–æ–≥–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è)
‚Ä¢ üåç –ó–∞–∑–µ–º–ª–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
‚Ä¢ üìè –ö–∞–±–µ–ª—å —Å–µ—á–µ–Ω–∏–µ–º 2.5-4 –º–º¬≤
‚Ä¢ üìä –†–∞—Å—á–µ—Ç: –º–æ—â–Ω–æ—Å—Ç—å –º–∞–π–Ω–µ—Ä–∞ + 25% –∑–∞–ø–∞—Å

üåê <b>–®–ê–ì 4: –°–ï–¢–¨ –ò –ù–ê–°–¢–†–û–ô–ö–ê</b>
‚Ä¢ üîó Ethernet –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ (WiFi –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
‚Ä¢ üîç –ü–æ–∏—Å–∫ IP-–∞–¥—Ä–µ—Å–∞ –º–∞–π–Ω–µ—Ä–∞
‚Ä¢ üíª –í—Ö–æ–¥ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
‚Ä¢ ‚õèÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—É–ª–∞ –º–∞–π–Ω–∏–Ω–≥–∞
‚Ä¢ üîê –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

üîß <b>–®–ê–ì 5: –û–ë–°–õ–£–ñ–ò–í–ê–ù–ò–ï</b>
‚Ä¢ üßπ –ß–∏—Å—Ç–∫–∞ –∫–∞–∂–¥—ã–µ 2-4 –Ω–µ–¥–µ–ª–∏
‚Ä¢ üå°Ô∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
‚Ä¢ üìä –ö–æ–Ω—Ç—Ä–æ–ª—å —Ö–µ—à—Ä–µ–π—Ç–∞
‚Ä¢ üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–∏–≤–∫–∏
‚Ä¢ üìù –í–µ–¥–µ–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–∞ —Ä–∞–±–æ—Ç—ã

‚ö†Ô∏è <b>–í–ê–ñ–ù–´–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:</b>
‚Ä¢ üö´ –ù–µ —Ä–∞–∑–º–µ—â–∞–π—Ç–µ –≤ –∂–∏–ª—ã—Ö –ø–æ–º–µ—â–µ–Ω–∏—è—Ö
‚Ä¢ üí® –û–±–µ—Å–ø–µ—á—å—Ç–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—É—é –≤–µ–Ω—Ç–∏–ª—è—Ü–∏—é  
‚Ä¢ ‚ö° –ù–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞–π—Ç–µ —ç–ª–µ–∫—Ç—Ä–æ—Å–µ—Ç—å
‚Ä¢ üßØ –î–µ—Ä–∂–∏—Ç–µ –æ–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª—å –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏
‚Ä¢ üìû –£–≤–µ–¥–æ–º–∏—Ç–µ —Å—Ç—Ä–∞—Ö–æ–≤—É—é –∫–æ–º–ø–∞–Ω–∏—é

üí° <b>–ü–û–õ–ï–ó–ù–´–ï –°–°–´–õ–ö–ò:</b>
‚Ä¢ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã: WhatToMine, NiceHash
‚Ä¢ –ü—É–ª—ã: Antpool, F2Pool, Poolin
‚Ä¢ –ü—Ä–æ—à–∏–≤–∫–∏: Braiins OS+, HiveOS
‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: minerstat, awesome-miner

‚ùì –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã? –ò—Å–ø–æ–ª—å–∑—É–µ–π—Ç–µ ‚ùì FAQ –≤ –º–µ–Ω—é!
    """
    
    await message.answer(guide_text, reply_markup=MAIN_MENU)

@dp.message(F.text == "‚ÑπÔ∏è –û –±–æ—Ç–µ")
async def menu_about(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –û –±–æ—Ç–µ"""
    about_text = """
‚ÑπÔ∏è <b>–û –ü–†–û–ï–ö–¢–ï ASIC PROFIT BOT</b>

üéØ <b>–ú–ò–°–°–ò–Ø</b>
–ü–æ–º–æ—á—å –º–∞–π–Ω–µ—Ä–∞–º –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–±–æsn–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ ASIC-–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è —Å —É—á–µ—Ç–æ–º —Ä–µ–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏.

üîß <b>–ß–¢–û –î–ï–õ–ê–ï–¢ –ë–û–¢:</b>
‚Ä¢ üìä –°–æ–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å –≤–µ–¥—É—â–∏—Ö —Å–∞–π—Ç–æ–≤ (WhatToMine, AsicMinerValue)
‚Ä¢ üí∞ –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç—å —Å —É—á–µ—Ç–æ–º –≤–∞—à–∏—Ö —Ç–∞—Ä–∏—Ñ–æ–≤
‚Ä¢ üí± –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —Ü–µ–Ω—ã –≤ —Ä—É–±–ª–∏ –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º—É –∫—É—Ä—Å—É
‚Ä¢ üìà –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫—É —Ä—ã–Ω–∫–∞
‚Ä¢ üõ†Ô∏è –î–∞–µ—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ

‚ö° <b>–û–°–û–ë–ï–ù–ù–û–°–¢–ò:</b>
‚Ä¢ üéØ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã
‚Ä¢ üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤  
‚Ä¢ üá∑üá∫ –ü–æ–ª–Ω–∞—è —Ä—É—Å—Å–∫–∞—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è
‚Ä¢ üì± –£–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ –∏–∫–æ–Ω–∫–∞–º–∏
‚Ä¢ ‚≠ê –°–∏—Å—Ç–µ–º–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –º–∞–π–Ω–µ—Ä–æ–≤

üë®‚Äçüíª <b>–†–ê–ó–†–ê–ë–û–¢–ß–ò–ö:</b>
–ë–æ—Ç —Å–æ–∑–¥–∞–Ω —ç–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–≥–æ –º–∞–π–Ω–∏–Ω–≥–∞ –¥–ª—è –ø–æ–º–æ—â–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤—É. 

üìß <b>–ö–û–ù–¢–ê–ö–¢–´:</b>
‚Ä¢ –¢–µ–ª–µ–≥—Ä–∞–º: @your_username
‚Ä¢ Email: support@asicprofitbot.com
‚Ä¢ GitHub: github.com/your-repo

üíù <b>–ü–û–î–î–ï–†–ñ–ê–¢–¨ –ü–†–û–ï–ö–¢:</b>
‚Ä¢ BTC: bc1qxxxxxxxxxxxxxxxxxxx
‚Ä¢ ETH: 0xxxxxxxxxxxxxxxxxxxx
‚Ä¢ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –±–æ—Ç–æ–º —Å –¥—Ä—É–∑—å—è–º–∏

üéâ <b>–ë–õ–ê–ì–û–î–ê–†–ù–û–°–¢–ò:</b>
–°–ø–∞—Å–∏–±–æ –≤—Å–µ–º, –∫—Ç–æ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –±–æ—Ç–∞ –∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å!

üìÖ –í–µ—Ä—Å–∏—è: 2.0
üóìÔ∏è –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: –¥–µ–∫–∞–±—Ä—å 2024
    """
    
    await message.answer(about_text, reply_markup=MAIN_MENU)

@dp.message(F.text == "ü§ù –ü–∞—Ä—Ç–Ω—ë—Ä–∫–∞")
async def menu_partner(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ü–∞—Ä—Ç–Ω—ë—Ä–∫–∞"""
    user_id = message.from_user.id
    partner_text = f"""
ü§ù <b>–ü–ê–†–¢–ù–Å–†–°–ö–ê–Ø –ü–†–û–ì–†–ê–ú–ú–ê</b>

üí∞ <b>–ó–ê–†–ê–ë–ê–¢–´–í–ê–ô–¢–ï –° –ù–ê–ú–ò!</b>
–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!

üéØ <b>–£–°–õ–û–í–ò–Ø –ü–†–û–ì–†–ê–ú–ú–´:</b>
‚Ä¢ üíµ 5% —Å –ø–æ–∫—É–ø–æ–∫ –ø–æ –≤–∞—à–∏–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º —Å—Å—ã–ª–∫–∞–º
‚Ä¢ üéÅ –ë–æ–Ω—É—Å 500‚ÇΩ –∑–∞ –∫–∞–∂–¥—ã–µ 10 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
‚Ä¢ üèÜ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–∑—ã –¥–ª—è —Ç–æ–ø-–ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤
‚Ä¢ üìà –ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: —á–µ–º –±–æ–ª—å—à–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤, —Ç–µ–º –≤—ã—à–µ %

üîó <b>–í–ê–®–ê –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–°–´–õ–ö–ê:</b>
<code>https://t.me/asic_profit_helper_bot?start=ref_{user_id}</code>

üìä <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê:</b>
‚Ä¢ üë• –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>0</b>
‚Ä¢ üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: <b>0‚ÇΩ</b>
‚Ä¢ üèÜ –í–∞—à —É—Ä–æ–≤–µ–Ω—å: <b>–ù–æ–≤–∏—á–æ–∫</b>

üéÅ <b>–£–†–û–í–ù–ò –ü–ê–†–¢–ù–Å–†–ê:</b>
‚Ä¢ ü•â –ù–æ–≤–∏—á–æ–∫ (0-9 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤): 5%
‚Ä¢ ü•à –≠–∫—Å–ø–µ—Ä—Ç (10-49 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤): 7%
‚Ä¢ ü•á –ü—Ä–æ—Ñ–∏ (50-99 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤): 10%
‚Ä¢ üíé VIP (100+ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤): 15%

üí≥ <b>–í–´–ü–õ–ê–¢–´:</b>
‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 1000‚ÇΩ
‚Ä¢ –°–ø–æ—Å–æ–±—ã: Qiwi, –Æmoney, –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞
‚Ä¢ –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å: –∫–∞–∂–¥—ã–µ 15 –¥–Ω–µ–π
‚Ä¢ –ö–æ–º–∏—Å—Å–∏—è: 0% (–º—ã –±–µ—Ä–µ–º –Ω–∞ —Å–µ–±—è)

‚ùì <b>–í–û–ü–†–û–°–´?</b>
–ù–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: @partner_support_bot
    """
    
    await message.answer(partner_text, reply_markup=MAIN_MENU)

@dp.message(F.text == "‚ùì FAQ")
async def menu_faq(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ FAQ"""
    faq_text = """
‚ùì <b>–ß–ê–°–¢–û –ó–ê–î–ê–í–ê–ï–ú–´–ï –í–û–ü–†–û–°–´</b>

ü§î <b>–û—Ç–∫—É–¥–∞ –±–µ—Ä—É—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏?</b>
üìä –ú—ã —Å–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –≤–µ–¥—É—â–∏—Ö –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–≤ –º–∞–π–Ω–∏–Ω–≥–∞: WhatToMine –∏ AsicMinerValue. –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤.

üí∞ <b>–ö–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Ä–µ–∞–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å?</b>
üßÆ –§–æ—Ä–º—É–ª–∞: (–î–æ—Ö–æ–¥ –≤ –¥–µ–Ω—å) - (–ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∫–í—Ç‚ãÖ—á √ó –í–∞—à —Ç–∞—Ä–∏—Ñ √ó 24 —á–∞—Å–∞)

üîÑ <b>–ö–∞–∫ —á–∞—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç?</b>
üí± –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—Ä–æ—Å–µ —á–µ—Ä–µ–∑ API –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –ë–∞–Ω–∫–∞ –†–§ –∏ –¥—Ä—É–≥–∏—Ö –Ω–∞–¥–µ–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.

‚ö° <b>–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ç–∞—Ä–∏—Ñ –Ω–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ?</b>
üìã –í–æ–∑—å–º–∏—Ç–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é –∑–∞ —Å–≤–µ—Ç, —Ä–∞–∑–¥–µ–ª–∏—Ç–µ —Å—É–º–º—É –∫ –¥–æ–ø–ª–∞—Ç–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–Ω—ã—Ö –∫–í—Ç‚ãÖ—á, –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –≤ –¥–æ–ª–ª–∞—Ä—ã –ø–æ —Ç–µ–∫—É—â–µ–º—É –∫—É—Ä—Å—É.

üè† <b>–ú–æ–∂–Ω–æ –ª–∏ –º–∞–π–Ω–∏—Ç—å –¥–æ–º–∞?</b>
‚ö†Ô∏è ASIC-–º–∞–π–Ω–µ—Ä—ã –æ—á–µ–Ω—å —à—É–º–Ω—ã–µ (70-80 –¥–ë) –∏ –≤—ã–¥–µ–ª—è—é—Ç –º–Ω–æ–≥–æ —Ç–µ–ø–ª–∞. –ù—É–∂–Ω–æ –æ—Ç–¥–µ–ª—å–Ω–æ–µ –ø—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–µ–º–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ.

üå°Ô∏è <b>–ö–∞–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∫—Ä–∏—Ç–∏—á–Ω–∞ –¥–ª—è –º–∞–π–Ω–µ—Ä–∞?</b>
üö® –ö—Ä–∏—Ç–∏—á–Ω–æ: –≤—ã—à–µ 85¬∞C. –û–ø—Ç–∏–º–∞–ª—å–Ω–æ: 60-75¬∞C. –ü—Ä–∏ 80¬∞C+ –º–∞–π–Ω–µ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç —Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥ (—Å–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏).

üîß <b>–ù—É–∂–Ω–∞ –ª–∏ –æ—Å–æ–±–∞—è —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∞?</b>
‚ö° –î–∞! –ù—É–∂–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–∞—è –ª–∏–Ω–∏—è —Å –∞–≤—Ç–æ–º–∞—Ç–æ–º –Ω–∞ 25–ê+, –£–ó–û, –∑–∞–∑–µ–º–ª–µ–Ω–∏–µ. –°–µ—á–µ–Ω–∏–µ –∫–∞–±–µ–ª—è –º–∏–Ω–∏–º—É–º 2.5 –º–º¬≤.

üí∏ <b>–ö–æ–≥–¥–∞ –º–∞–π–Ω–∏–Ω–≥ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —É–±—ã—Ç–æ—á–Ω—ã–º?</b>
üìâ –ö–æ–≥–¥–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–æ—Ö–æ–¥ –æ—Ç –º–∞–π–Ω–∏–Ω–≥–∞. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –∫—Ä–∞—Å–Ω—ã–º–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏ –≤ –±–æ—Ç–µ.

üõí <b>–ì–¥–µ –ª—É—á—à–µ –ø–æ–∫—É–ø–∞—Ç—å –º–∞–π–Ω–µ—Ä—ã?</b>
üè™ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –¥–∏–ª–µ—Ä—ã > –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–≤—Ü—ã –Ω–∞ AliExpress > –±/—É —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π. –û—Å—Ç–µ—Ä–µ–≥–∞–π—Ç–µ—Å—å —Å–ª–∏—à–∫–æ–º –Ω–∏–∑–∫–∏—Ö —Ü–µ–Ω!

üîÑ <b>–ö–∞–∫ —á–∞—Å—Ç–æ –Ω—É–∂–Ω–æ –æ–±—Å–ª—É–∂–∏–≤–∞—Ç—å –º–∞–π–Ω–µ—Ä?</b>
üßπ –ß–∏—Å—Ç–∫–∞ –æ—Ç –ø—ã–ª–∏: –∫–∞–∂–¥—ã–µ 2-4 –Ω–µ–¥–µ–ª–∏. –ó–∞–º–µ–Ω–∞ —Ç–µ—Ä–º–æ–ø–∞—Å—Ç—ã: —Ä–∞–∑ –≤ –≥–æ–¥. –ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–æ–≤: –∫–∞–∂–¥—ã–µ 3-6 –º–µ—Å—è—Ü–µ–≤.

‚õèÔ∏è <b>–ö–∞–∫–æ–π –ø—É–ª –≤—ã–±—Ä–∞—Ç—å –¥–ª—è –º–∞–π–Ω–∏–Ω–≥–∞?</b>
üèä –ö—Ä—É–ø–Ω—ã–µ: Antpool, F2Pool, Poolin. –î–ª—è began –ª—É—á—à–µ –∫—Ä—É–ø–Ω—ã–µ –ø—É–ª—ã —Å–æ —Å—Ç–∞–±–∏–ª—å–Ω—ã–º–∏ –≤—ã–ø–ª–∞—Ç–∞–º–∏.

üì± <b>–ï—Å—Ç—å –ª–∏ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?</b>
üì≤ –ü–æ–∫–∞ —Ç–æ–ª—å–∫–æ Telegram-–±–æ—Ç, –Ω–æ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –º–æ–±–∏–ª—å–Ω—ã–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º!

üÜò <b>–ù–ï –ù–ê–®–õ–ò –û–¢–í–ï–¢?</b>
–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫–µ: @support_bot
–ò–ª–∏ –≤ —á–∞—Ç–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞: @asic_chat
    """
    
    await message.answer(faq_text, reply_markup=MAIN_MENU)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ (–¥—É–±–ª–∏—Ä—É—é—Ç –∫–Ω–æ–ø–∫–∏)
@dp.message(Command("top"))
async def cmd_top(message: Message):
    await menu_top_miners(message)

@dp.message(Command("analytics"))
async def cmd_analytics(message: Message):
    await menu_analytics(message)

@dp.message(Command("profit"))
async def cmd_profit(message: Message):
    await menu_profit_rub(message)

@dp.message(Command("settings"))
async def cmd_settings(message: Message):
    await menu_settings(message)

@dp.message(Command("guide"))
async def cmd_guide(message: Message):
    await menu_guide(message)

@dp.message(Command("about"))
async def cmd_about(message: Message):
    await menu_about(message)

@dp.message(Command("partner"))
async def cmd_partner(message: Message):
    await menu_partner(message)

@dp.message(Command("faq"))
async def cmd_faq(message: Message):
    await menu_faq(message)

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
@dp.message(Command("mytariff"))
async def cmd_my_tariff(message: Message):
    try:
        user_settings = await get_user_settings(message.from_user.id)
        tariff = user_settings['electricity_tariff']
        currency = user_settings['currency']
        
        await message.answer(
            f"üí° <b>–í–ê–®–ò –¢–ï–ö–£–©–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò</b>\n\n"
            f"‚ö° –¢–∞—Ä–∏—Ñ –Ω–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ: <b>${tariff:.3f}/–∫–í—Ç‚ãÖ—á</b>\n"
            f"üí± –í–∞–ª—é—Ç–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è: <b>{currency}</b>\n"
            f"üåç –†–µ–≥–∏–æ–Ω: <b>–ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ</b>\n\n"
            f"üîß –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –º–µ–Ω—é",
            reply_markup=MAIN_MENU
        )
    except Exception as e:
        print(f"Error in cmd_my_tariff: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫", reply_markup=MAIN_MENU)

@dp.message(Command("favorites"))
async def cmd_favorites(message: Message):
    try:
        user_id = message.from_user.id
        favorites = await get_user_favorites(user_id)
        
        if not favorites:
            await message.answer(
                "‚≠ê <b>–ò–ó–ë–†–ê–ù–ù–´–ï –ú–ê–ô–ù–ï–†–´</b>\n\n"
                "üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –º–∞–π–Ω–µ—Ä–æ–≤.\n\n"
                "üí° <i>–î–æ–±–∞–≤–ª—è–π—Ç–µ –º–∞–π–Ω–µ—Ä—ã –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ —á–µ—Ä–µ–∑ –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –≤ —Ç–æ–ø–µ</i>",
                reply_markup=MAIN_MENU
            )
        return
        
        text = "‚≠ê <b>–í–ê–®–ò –ò–ó–ë–†–ê–ù–ù–´–ï –ú–ê–ô–ù–ï–†–´</b>\n\n"
        for fav in favorites[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 10
            text += f"‚Ä¢ <b>{fav['vendor']} {fav['model']}</b>\n"
            text += f"  ‚≠ê <i>–î–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ</i>\n\n"
        
        text += f"üìä <i>–í—Å–µ–≥–æ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö: {len(favorites)}</i>\n\n"
        text += f"üí° <i>–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –º–∞–π–Ω–µ—Ä–∞–º —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ ü™ô –¢–û–ü-–º–∞–π–Ω–µ—Ä—ã</i>"
        
        await message.answer(text, reply_markup=MAIN_MENU)
        
    except Exception as e:
        print(f"Error in cmd_favorites: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ", reply_markup=MAIN_MENU)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ inline callback'–æ–≤
@dp.callback_query(F.data == "change_tariff")
async def change_tariff_callback(callback, state: FSMContext):
    await callback.message.answer(
        "‚ö° <b>–ò–ó–ú–ï–ù–ï–ù–ò–ï –¢–ê–†–ò–§–ê –ù–ê –≠–õ–ï–ö–¢–†–ò–ß–ï–°–¢–í–û</b>\n\n"
        "üí° –í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–∞—Ä–∏—Ñ –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö –∑–∞ –∫–í—Ç‚ãÖ—á.\n\n"
        "üìã <b>–ö–∞–∫ —É–∑–Ω–∞—Ç—å —Ç–∞—Ä–∏—Ñ:</b>\n"
        "1Ô∏è‚É£ –í–æ–∑—å–º–∏—Ç–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é –∑–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ\n"
        "2Ô∏è‚É£ –†–∞–∑–¥–µ–ª–∏—Ç–µ —Å—É–º–º—É –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–í—Ç‚ãÖ—á\n"
        "3Ô∏è‚É£ –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –≤ –¥–æ–ª–ª–∞—Ä—ã –ø–æ –∫—É—Ä—Å—É\n\n"
        "üî¢ <b>–ü—Ä–∏–º–µ—Ä:</b> 0.05 –∏–ª–∏ 0.12\n\n"
        "‚ùå –î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel",
        reply_markup=MAIN_MENU
    )
    await state.set_state(UserStates.waiting_for_tariff)
    await callback.answer()

@dp.callback_query(F.data == "change_currency")
async def change_currency_callback(callback):
    currencies_kb = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üá∫üá∏ USD", callback_data="currency_USD"),
            InlineKeyboardButton(text="üá∑üá∫ RUB", callback_data="currency_RUB")
        ],
        [
            InlineKeyboardButton(text="üá™üá∫ EUR", callback_data="currency_EUR"),
            InlineKeyboardButton(text="üá®üá≥ CNY", callback_data="currency_CNY")
        ]
    ])
    
    await callback.message.answer(
        "üí± <b>–í–´–ë–û–† –í–ê–õ–Æ–¢–´</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏:",
        reply_markup=currencies_kb
    )
    await callback.answer()

@dp.callback_query(F.data.startswith("currency_"))
async def currency_callback(callback):
    currency = callback.data.split("_")[1]
    user_id = callback.from_user.id
    
    await update_user_currency(user_id, currency)
    
    currency_names = {
        'USD': 'üá∫üá∏ –î–æ–ª–ª–∞—Ä –°–®–ê',
        'RUB': 'üá∑üá∫ –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å', 
        'EUR': 'üá™üá∫ –ï–≤—Ä–æ',
        'CNY': 'üá®üá≥ –ö–∏—Ç–∞–π—Å–∫–∏–π —é–∞–Ω—å'
    }
    
    await callback.message.answer(
        f"‚úÖ <b>–í–∞–ª—é—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∞!</b>\n\n"
        f"üí± –ù–æ–≤–∞—è –≤–∞–ª—é—Ç–∞: <b>{currency_names[currency]}</b>\n\n"
        f"üîÑ –í—Å–µ —Ä–∞—Å—á–µ—Ç—ã –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—Ä–æ—Å–µ.",
        reply_markup=MAIN_MENU
    )
    await callback.answer(f"–í–∞–ª—é—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {currency}")

# FSM –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
@dp.message(UserStates.waiting_for_tariff)
async def process_tariff(message: Message, state: FSMContext):
    try:
        tariff = float(message.text)
        if tariff <= 0 or tariff > 1:
            await message.answer(
                "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ!</b>\n\n"
                "–¢–∞—Ä–∏—Ñ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º –∏ –Ω–µ –±–æ–ª—å—à–µ $1/–∫–í—Ç‚ãÖ—á.\n\n"
                "üî¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:",
                reply_markup=MAIN_MENU
            )
            return
        
        user_id = message.from_user.id
        await update_user_tariff(user_id, tariff)
        
        await message.answer(
            f"‚úÖ <b>–¢–∞—Ä–∏—Ñ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!</b>\n\n"
            f"‚ö° –ù–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ: <b>${tariff:.3f}/–∫–í—Ç‚ãÖ—á</b>\n\n"
            f"üîÑ –í—Å–µ —Ä–∞—Å—á–µ—Ç—ã –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏ –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω—ã —Å —É—á–µ—Ç–æ–º –Ω–æ–≤–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞.",
            reply_markup=MAIN_MENU
        )
        await state.clear()
        
    except ValueError:
        await message.answer(
            "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!</b>\n\n"
            "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 0.05 –∏–ª–∏ 0.12\n\n"
            "üî¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:",
            reply_markup=MAIN_MENU
        )

@dp.message(Command("cancel"))
async def cmd_cancel(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(
        "‚ùå <b>–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ</b>\n\n"
        "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é.",
        reply_markup=MAIN_MENU
    )

# –û–¢–õ–ê–î–û–ß–ù–´–ô –•–ï–ù–î–õ–ï–† (–ø–æ—Å–ª–µ–¥–Ω–∏–π –≤ –æ—á–µ—Ä–µ–¥–∏)
@dp.message(F.text)
async def debug_text_handler(message: Message):
    """–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Ö–µ–Ω–¥–ª–µ—Ä - –ª–æ–≥–∏—Ä—É–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    print(f"üêõ DEBUG: –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: '{message.text}' (len={len(message.text)})")
    print(f"üêõ DEBUG: Repr: {repr(message.text)}")
    print(f"üêõ DEBUG: Bytes: {message.text.encode('utf-8')}")
    await message.answer(
        f"ü§î <b>–ù–µ –ø–æ–Ω–∏–º–∞—é –∫–æ–º–∞–Ω–¥—É:</b> <code>{message.text}</code>\n\n"
        f"üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞!",
        reply_markup=MAIN_MENU
    )

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ ASIC Profit Bot —Å –ø–æ–ª–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º...")
    try:
        print("üìä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    await init_db()
        print("üë§ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –±–∞–∑—ã...")
        await init_user_db()
        print("‚è∞ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...")
    start_scheduler()
        print("üîÑ –ü–µ—Ä–≤–∏—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...")
    await refresh_miners()
        print("‚úÖ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã! –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    await dp.start_polling(bot)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")

if __name__ == "__main__":
    asyncio.run(main())
