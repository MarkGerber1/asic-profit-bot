# –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–û–ï –†–ï–®–ï–ù–ò–ï: InlineKeyboardMarkup
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ fallback, –µ—Å–ª–∏ ReplyKeyboardMarkup –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

# Inline-–º–µ–Ω—é –∫–∞–∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ ReplyKeyboardMarkup
INLINE_MAIN_MENU = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(text="ü™ô –¢–û–ü-–º–∞–π–Ω–µ—Ä—ã", callback_data="menu_top"),
        InlineKeyboardButton(text="üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", callback_data="menu_analytics")
    ],
    [
        InlineKeyboardButton(text="üí∏ –ü—Ä–æ—Ñ–∏—Ç –≤ —Ä—É–±–ª—è—Ö", callback_data="menu_rub"),
        InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="menu_settings")
    ],
    [
        InlineKeyboardButton(text="üõ†Ô∏è –ì–∞–π–¥", callback_data="menu_guide"),
        InlineKeyboardButton(text="‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="menu_about")
    ],
    [
        InlineKeyboardButton(text="ü§ù –ü–∞—Ä—Ç–Ω—ë—Ä–∫–∞", callback_data="menu_partner"),
        InlineKeyboardButton(text="‚ùì FAQ", callback_data="menu_faq")
    ]
])

# –•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è inline-–∫–Ω–æ–ø–æ–∫
"""
@dp.callback_query(F.data == "menu_top")
async def inline_menu_top(callback):
    await callback.message.edit_text(
        "–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¢–û–ü-–º–∞–π–Ω–µ—Ä–∞–º...",
        reply_markup=INLINE_MAIN_MENU
    )
    await menu_top_miners(callback.message)
    await callback.answer()

@dp.callback_query(F.data == "menu_analytics") 
async def inline_menu_analytics(callback):
    await menu_analytics(callback.message)
    await callback.answer()

@dp.callback_query(F.data == "menu_rub")
async def inline_menu_rub(callback):
    await menu_profit_rub(callback.message)
    await callback.answer()

@dp.callback_query(F.data == "menu_settings")
async def inline_menu_settings(callback):
    await menu_settings(callback.message)
    await callback.answer()

@dp.callback_query(F.data == "menu_guide")
async def inline_menu_guide(callback):
    await menu_guide(callback.message)
    await callback.answer()

@dp.callback_query(F.data == "menu_about")
async def inline_menu_about(callback):
    await menu_about(callback.message)
    await callback.answer()

@dp.callback_query(F.data == "menu_partner")
async def inline_menu_partner(callback):
    await menu_partner(callback.message)
    await callback.answer()

@dp.callback_query(F.data == "menu_faq")
async def inline_menu_faq(callback):
    await menu_faq(callback.message)
    await callback.answer()
""" 