import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import CommandStart
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from config import BOT_TOKEN

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å —ç–º–æ–¥–∑–∏ –∏ 8 –∫–Ω–æ–ø–∫–∞–º–∏
MAIN_MENU = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text="ü™ô –¢–û–ü-–º–∞–π–Ω–µ—Ä—ã"),
            KeyboardButton(text="üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞"),
            KeyboardButton(text="üí∏ –ü—Ä–æ—Ñ–∏—Ç –≤ —Ä—É–±–ª—è—Ö")
        ],
        [
            KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
            KeyboardButton(text="üõ†Ô∏è –ì–∞–π–¥ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ")
        ],
        [
            KeyboardButton(text="‚ÑπÔ∏è –û –±–æ—Ç–µ"),
            KeyboardButton(text="ü§ù –ü–∞—Ä—Ç–Ω—ë—Ä–∫–∞"),
            KeyboardButton(text="‚ùì FAQ")
        ]
    ],
    resize_keyboard=True,
    is_persistent=True,
    one_time_keyboard=False,
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é..."
)

default_props = DefaultBotProperties(parse_mode=ParseMode.HTML)
bot = Bot(BOT_TOKEN, default=default_props)
dp = Dispatcher()

@dp.message(CommandStart())
async def cmd_start(message: Message):
    print(f"[LOG] /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    await message.answer(
        "<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.</b>",
        reply_markup=MAIN_MENU
    )

@dp.message(F.text == "ü™ô –¢–û–ü-–º–∞–π–Ω–µ—Ä—ã")
async def top_miners(message: Message):
    print(f"[LOG] –ö–ù–û–ü–ö–ê: –¢–û–ü-–º–∞–π–Ω–µ—Ä—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    await message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –¢–û–ü-–º–∞–π–Ω–µ—Ä—ã!", reply_markup=MAIN_MENU)

@dp.message(F.text == "üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞")
async def analytics(message: Message):
    print(f"[LOG] –ö–ù–û–ü–ö–ê: –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    await message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞!", reply_markup=MAIN_MENU)

@dp.message(F.text == "üí∏ –ü—Ä–æ—Ñ–∏—Ç –≤ —Ä—É–±–ª—è—Ö")
async def profit_rub(message: Message):
    print(f"[LOG] –ö–ù–û–ü–ö–ê: –ü—Ä–æ—Ñ–∏—Ç –≤ —Ä—É–±–ª—è—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    await message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ü—Ä–æ—Ñ–∏—Ç –≤ —Ä—É–±–ª—è—Ö!", reply_markup=MAIN_MENU)

@dp.message(F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def settings(message: Message):
    print(f"[LOG] –ö–ù–û–ü–ö–ê: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    await message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ù–∞—Å—Ç—Ä–æ–π–∫–∏!", reply_markup=MAIN_MENU)

@dp.message(F.text == "üõ†Ô∏è –ì–∞–π–¥ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ")
async def guide(message: Message):
    print(f"[LOG] –ö–ù–û–ü–ö–ê: –ì–∞–π–¥ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    await message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ì–∞–π–¥ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ!", reply_markup=MAIN_MENU)

@dp.message(F.text == "‚ÑπÔ∏è –û –±–æ—Ç–µ")
async def about(message: Message):
    print(f"[LOG] –ö–ù–û–ü–ö–ê: –û –±–æ—Ç–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    await message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –û –±–æ—Ç–µ!", reply_markup=MAIN_MENU)

@dp.message(F.text == "ü§ù –ü–∞—Ä—Ç–Ω—ë—Ä–∫–∞")
async def partner(message: Message):
    print(f"[LOG] –ö–ù–û–ü–ö–ê: –ü–∞—Ä—Ç–Ω—ë—Ä–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    await message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ü–∞—Ä—Ç–Ω—ë—Ä–∫–∞!", reply_markup=MAIN_MENU)

@dp.message(F.text == "‚ùì FAQ")
async def faq(message: Message):
    print(f"[LOG] –ö–ù–û–ü–ö–ê: FAQ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    await message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ FAQ!", reply_markup=MAIN_MENU)

@dp.message(F.text)
async def debug_handler(message: Message):
    print(f"[LOG] –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {message.text} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    await message.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é!", reply_markup=MAIN_MENU)

async def main():
    print("[LOG] –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞ —Å –ø–æ–ª–Ω—ã–º –º–µ–Ω—é –∏ —ç–º–æ–¥–∑–∏...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main()) 